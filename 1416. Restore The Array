'''
A program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a string of digits s and all we know is that all integers in the array were in the range [1, k] and there are no leading zeros in the array.

Given the string s and the integer k, return the number of the possible arrays that can be printed as s using the mentioned program. Since the answer may be very large, return it modulo 109 + 7.

 

Example 1:

Input: s = "1000", k = 10000
Output: 1
Explanation: The only possible array is [1000]
'''


class Solution:
    def dfs(self, s: str, k: int, i: int, dp: List[int]) -> int:
        if i == len(s):
            return 1
        if s[i] == '0':
            return 0
        if dp[i] != -1:
            return dp[i]

        ans = 0
        num = 0
        for j in range(i, len(s)):
            num = num * 10 + int(s[j])
            if num > k:
                break
            ans = (ans + self.dfs(s, k, j + 1, dp)) % 1000000007

        dp[i] = ans
        return ans

    def numberOfArrays(self, s: str, k: int) -> int:
        dp = [-1] * len(s)
        return self.dfs(s, k, 0, dp)
